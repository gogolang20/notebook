#---------------------------------------#---------------------------------------#
寄存器之间是相互独立的!!!
数据寄存器 H.L
AX    AH AL
BX    BH BL 
CX    CH CL 
DX    DH DL 


mov ax,2  # ax = 2
add ax,ax # ax = 4
add ax,ax # ax = 8
add ax,ax # ax =16

#---------------------------------------#---------------------------------------#

段地址寄存器
DS ES SS CS

偏移地址寄存器
SP BP SI DI BX

段地址 * 16 + 偏移地址 = 物理地址

#---------------------------------------#---------------------------------------#

DOSBox
u指令: 将某个内存地址开始的字节 全部当作指令
d指令: 将某个内存地址开始的字节 全部当作数据 # d 1000:0 f
r指令: 可以查看和改变寄存器中的内容 # r cs

a指令: 可以以汇编指令的格式在内存中写入一条汇编指令 # a 2000:0
t指令: 执行当前CS:IP 所指向的机器指令
e指令: 可以改写内存中的内容 # e 2000:0

指令的执行过程: (为了实现call指令!!!)
1. CPU从CS:IP 所指向的内存单元读取指令, 存放到指令缓存器中.
2. IP = IP + 所读指令的长度,从而指向下一指令.
3. 执行指令缓存器中的内容, 回到步骤1

jmp指令: 会修改CS:IP 的值 #jmp 2000:0; jmp BX
call指令: 转移指令, 将下一条指向的IP地址保存到内存中(内存中什么位置？？？)
ret指令: 转移指令, 跳转到call在内存中保存下一条指令位置

