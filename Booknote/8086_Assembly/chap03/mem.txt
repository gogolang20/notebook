#---------------------------------------#---------------------------------------#
一个字型数据 存放在内存中, 可以由2个连续的地址的内存单元组成
高地址 内存单元存放 字型数据的 高位字节
低地址 内存单元存放 字型数据的 低位字节


#---------------------------------------#---------------------------------------#
ds段地址寄存器 访问数据用的

mov al,ds:[0] # mov al,[0]
mov ax,ds:[0] # mov ax,[0]


#---------------------------------------#---------------------------------------#
call指令将IP 保存到内存中什么位置    ret 可以拿回
临时保存到栈中!!!

栈(stack) 是一段连续的内存单元, 也就是一段连续的内存地址
SS:SP
BP

在8086CPU中, 在任意时刻将段地址寄存器SS 和偏移地址寄存器SP 所组合出来的内存地址 当作栈顶标记!

入栈顺序 (push ax)
1. 修改SP值(减去) SP = SP - 2
2. 将 AX 中字型数据 --> SS:SP 所组合出来的内存地址中

出栈顺序 (pop bx)
1. SS:SP 所组合出来的内存地址中的字型数据 --> bx
2. 修改栈顶标记 SP = SP + 2


栈是如何设置:
>debug
>a
mov ax,2000
mov ss,ax
mov sp,0 # 设置一个 0~ffff 64KB大小的栈

