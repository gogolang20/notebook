不通过寄存器确定数据的长度
mov byte ptr ds:[0],1
mov word ptr ds:[0],1

除数: 有8位和16位两种, 在一个 寄存器 或者 内存单元中

被除数: 默认放在 AX 或者 AX&&DX 中
    如果除数为8位, 被除数则为16位, 默认存放在AX中
    如果除数为16位, 被除数则为32位, DX存放高16位, AX存放低16位

Result: 如果除数为8位, 则AL存储除法操作的商, AH存储除法操作的余数
        如果除数为16位, 则AX存储除法操作的商, DX存储除法操作的余数


div 指令
16      被除数      ==> ax
3       除数        ==> 寄存器或者内存中
5       商          ==> al
1       余数        ==> ah


除数可以存放在寄存器或者内存中, 语法:
        mov ax,16
        mov bl,3
        div bl      ;al = 5, ah = 1

        div byte ptr ds:[0]


        mov ax,ds:[0]
        mov dx,ds:[2]
        mov bx,3
        div bx      ;ax = 5, dx = 1

        div word ptr ds:[4]

#---------------------------------------#
dd (伪指令)
define dword (double word)

#---------------------------------------#
dup (伪指令)
        db      10 dup (1)
        dw      10 dup (1)
        dd      10 dup (1)

        db      100 dup ('1')
        db      100 dup ('12')
        db      10 dup ('123', 'abc')

#---------------------------------------#
bp 默认段地址寄存器是 ss
